# -*- coding: utf-8 -*-
"""Copia de Operaciones de señales continuas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ew-LtGj9eNG4egmYBr9ZBSnGeGTJrsDA

# Operaciones básicas sobre señales

Las operaciones como la superposición, el cambio temporal y el escalamiento, se utilizan para construir señales con una estructura más compleja.

Se introduce un conjunto de operaciones elementales que se utilizan frecuentemente en el procesamiento de señales.

### Superposición

La superposición $x(t)$ de dos señales $x_1(t)$ and $x_2(t)$ está dada por:

\begin{equation}
x(t) = A \cdot x_1(t) + B \cdot x_2(t)
\end{equation}

con los pesos complejos $A, B \in \mathbb{C}$.

**Ejemplo**

El siguiente ejemplo ilustra la superposición de dos señales armónicas $x(t) = A \cdot \cos(\omega_1 t) + B \cdot \cos(\omega_2 t)$ con pesos $A$, $B$ y frecuencia angular $\omega_1$ y $\omega_2$.
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import sympy as sym

t = sym.symbols('t', real=True)#se declara la variable simbólica t

#parámetros de las funciones cos
A = .3
om1 = 3
B = .5
om2 = 5

#operación superposición en sympy
x = A*sym.cos(om1*t) + B*sym.cos(om2*t)
#se grafica la señal resultante
sym.plot(x, (t,-5,5), ylim=[-1.2, 1.2], ylabel=r'$x(t)$');

"""### Desplazamiento temporal

El desplazamiento temporal de una señal $s(t)$ en un instante de tiempo $\tau$ es una operación frecuentemente aplicada en el procesamiento de señales. Por ejemplo, para modelar la propagación de señales desde un actuador a un sensor.

El desplazamiento de la señal $x(t)$ está definido como:

\begin{equation}
x(t) = s(t-\tau)
\end{equation}

con $\tau \in \mathbb{R}$. La señal $s(t)$ es:

* desplazada hacia la derecha (*retrasada*) para $\tau > 0$
* desplazada hacia la izquierda para $\tau < 0$

**Ejemplo**

Para ilustrar el cambio temporal de señales, la construcción de una señal escalera por una superposición de desplazamiento se define como:

\begin{equation}
x(t) = \text{rect}\left(t - \frac{1}{2} \right) + \frac{2}{3} \cdot \text{rect}\left(t-\frac{3}{2} \right) + \frac{1}{3} \cdot \text{rect} \left(t-\frac{5}{2} \right)
\end{equation}
"""

rect = sym.Heaviside(t + 0.5) - sym.Heaviside(t - 0.5)
sym.plot(rect, xlim=[-2,2], ylabel = r'rect(t)')
#los rect desplazados se acoplan con escalamientos diferentes
x = 4/3*rect.subs(t, t+1/2) + rect.subs(t, t-1/2) + 2/3*rect.subs(t, t-3/2) + 1/3*rect.subs(t, t-5/2)
sym.plot(x, (t, -2, 5), ylim=[-0.2, 2], ylabel='$x(t)$');

"""**Ejercicio**

* Agregar otro escalón al principio de la señal escalera modificando el ejemplo anterior.

### Escalamiento temporal

El escalamiento temporal de una señal $s(t)$ está definido como:

\begin{equation}
x(t) = s(a \cdot t)
\end{equation}

con $a \in \mathbb{R}$. La señal $s(t)$ es

* estirada para $0 < a < 1$
* comprimida $a > 1$
* invertida y escalada para $a < 0$

Una aplicación de escalado temporal en el procesamiento de la señal es la escala de las señales estándar y el modelado del [efecto Doppler](https://en.wikipedia.org/wiki/Doppler_effect).

**Ejemplo**

El siguiente ejemplo ilustra el escalamiento de una señal escalera $y(t) = x(a \cdot t)$.
"""

a = sym.symbols('a', real=True)
y = x.subs(t, a*t)

px = sym.plot(x, (t, -7, 7), ylim=[-2, 2], ylabel=r'$y(t)$', show=False, line_color='gray')
py = sym.plot(-y.subs(a,3), (t, -7, 7), ylim=[-2, 2], ylabel=r'$y(t)$', show=False)
px.extend(py)#se extiende los gráficos sobre una misma figura
px.show()

"""**Ejercicio**

* Modifique el ejemplo anterior para que la señal se comprima.
* Modifique el ejemplo anterior para que la señal se escale y se invierta. ¿Qué factor de escala `a`da como resultado un       estiramiento/compresión en este contexto?  

**Respuesta**

* Para que la señal se escale, se cambia el valor de a, en este caso se utilizo un valor >1 por lo tanto la señal fue comprimida.
* Para que la señal se invierta se cambia su signo

### Desplazamiento Temporal

El desplazamiento temporal de una señal $s(t)$ está definido como

\begin{equation}
x(t) = s(\tau - t)
\end{equation}

para $\tau \in \mathbb{R}$. Como $s(\tau - t) = s(- (t - \tau))$ la operación espejo también se puede representar como una inversión temporal de la señal $s(t)$ seguida por un desplazamiento de $\tau$ de la señal invertida. Para $\tau = 0$ este resultado es solo una inversión temporal de la señal.

La operación de cambio temporal puede interpretarse geométricamente como un reflejo de la señal $s(t)$ en el eje vertical $t=\frac{\tau}{2}$.

**Ejemplo**

El siguiente ejemplo ilustra el cambio temporal $y(t) = x(\tau - t)$ de la señal escalera $x(t)$ anteriormente introducida.
"""

tau = 3
x_inverted = x.subs(t, -t)
y = x_inverted.subs(t, t - tau)

px=sym.plot(x, (t, -7, 7), ylim=[-0.2, 2], ylabel=r'$y(t)$', line_color='gray', show=False)
py=sym.plot(y, (t, -7, 7), ylim=[-0.2, 2], ylabel=r'$y(t)$', show=False)
px.extend(py)
px.show()

"""**Ejercicio**

* Para que valor de $\tau$, ¿la señal comienza en $t=0$?
* Realice un cambio temporal dividiendo en dos operaciones consecutivas: (i) Inversión temporal y (ii) Desplazamiento temporal.

**Copyright**

The notebook is provided as [Open Educational Resource](https://de.wikipedia.org/wiki/Open_Educational_Resources). Feel free to use the notebook for your own educational purposes. The text is licensed under [Creative Commons Attribution 4.0](https://creativecommons.org/licenses/by/4.0/), the code of the IPython examples under the [MIT license](https://opensource.org/licenses/MIT). Please attribute the work as follows: *Signals and Systems* by Sascha Spors.
"""